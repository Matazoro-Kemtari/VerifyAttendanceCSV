<UserControl x:Class="Wada.VerifyAttendanceCSV.Views.ComparisonAttendanceTablePage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Wada.VerifyAttendanceCSV.Views"
             xmlns:viewmodels="clr-namespace:Wada.VerifyAttendanceCSV.ViewModels"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             xmlns:prism="http://prismlibrary.com/"
             d:DesignHeight="600" d:DesignWidth="500"
             d:Background="LightGray"
             d:DataContext="{d:DesignInstance Type=viewmodels:ComparisonAttendanceTablePageViewModel}"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             FontSize="16"
             xml:lang="ja-JP">
    <UserControl.Resources>
        <!-- BooleanをVisibility列挙型に変換するコンバータ 組み込みコンバータ -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!--複数のコンバーターをまとめる定義-->
        <local:ValueConverterGroup x:Key="NegativeBooleanToVisibilityConverter">
            <local:BooleanNegativeConverter />
            <BooleanToVisibilityConverter />
        </local:ValueConverterGroup>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger MessageKey="Info" Messenger="{Binding Messenger}">
            <l:InformationDialogInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="Confirm" Messenger="{Binding Messenger}">
            <l:ConfirmationDialogInteractionMessageAction/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <DockPanel LastChildFill="True">
        <TextBlock DockPanel.Dock="Top"
                   Margin="5"
                   Text="勤怠CSVファイルと勤務表の比較"/>

        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="進む(_N)"
                    MinWidth="70"
                    Margin="5,5,5,5"
                    Padding="5,5,5,5"
                    Command="{Binding NextViewCommand}"/>
        </StackPanel>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0"
                       Margin="5"
                       ToolTip="勤怠CSVファイルをドロップしてください"
                       Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                       StrokeThickness="3"
                       StrokeDashArray="2"
                       SnapsToDevicePixels="True"
                       StrokeStartLineCap="Round"
                       StrokeEndLineCap="Round"
                       dd:DragDrop.IsDropTarget="True"
                       dd:DragDrop.DropHandler="{Binding AttendanceCsvDropHandler}"/>
            <TextBlock Grid.Row="0"
                       x:Name="CsvFilePath"
                       Margin="20"
                       Text="{Binding CSVPath.Value}"
                       TextWrapping="Wrap"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center">
                <Validation.ErrorTemplate>
                    <!-- エラー時に赤枠を表示させない -->
                    <ControlTemplate/>
                </Validation.ErrorTemplate>
            </TextBlock>
            <TextBlock Grid.Row="0"
                       Margin="20"
                       Text="{Binding (Validation.Errors)[0].ErrorContent, ElementName=CsvFilePath}"
                       Foreground="Red"
                       FontWeight="Bold"
                       TextWrapping="Wrap"
                       Visibility="{Binding (Validation.HasError), ElementName=CsvFilePath, Converter={StaticResource BooleanToVisibilityConverter}}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>
            <TextBlock Grid.Row="1"
                       Margin="5"
                       Text="勤務表エクセルのフォルダ" />
            <ListBox Grid.Row="2"
                     x:Name="XlsxDirPath"
                     Margin="5"
                     ItemsSource="{Binding XlsxPaths}"
                     SelectedIndex="{Binding XlsxListSelectedIndex.Value}"
                     ToolTip="勤務表エクセルのあるフォルダをドロップしてください"
                     d:ItemsSource="{d:SampleData}"
                     dd:DragDrop.IsDropTarget="True"
                     dd:DragDrop.UseDefaultDragAdorner="True"
                     dd:DragDrop.DropHandler="{Binding XlsxDirectoryDropHandler}">
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="削除" Command="{Binding RemoveDirectoryItemCommand}"/>
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>
            <TextBlock Grid.Row="2"
                       Margin="20"
                       Text="{Binding ToolTip, ElementName=XlsxDirPath}"
                       Foreground="Red"
                       FontWeight="Bold"
                       TextWrapping="Wrap"
                       Visibility="{Binding HasItems, ElementName=XlsxDirPath, Converter={StaticResource NegativeBooleanToVisibilityConverter}}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>
            <StackPanel Grid.Row="3" Orientation="Horizontal">
                <TextBlock Margin="5" Text="処理対象月"/>
                <ComboBox Margin="5"
                          ItemsSource="{Binding TargetDates}"
                          SelectedIndex="1"
                          SelectedItem="{Binding TargetDate.Value, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding {}, StringFormat={}{0:yyyy年M月}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <StackPanel Grid.Row="4">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="5"
                                Text="自社休日カレンダー最終日付"/>
                    <TextBlock Margin="5"
                               Text="{Binding LastedHoliday.Value, StringFormat={}{0:yyyy年M月d日(ddd)}}"/>
                </StackPanel>
                <TextBlock Margin="20,5,5,5"
                           TextWrapping="Wrap"
                           Text="この日以降は 比較前に休日カレンダーを登録してください"/>
                <TextBlock Margin="20,0,5,5"
                           TextWrapping="Wrap"
                           Text="また 工数記録システムでも使用するので 従業員が工数記録する前に登録してください"
                       />
            </StackPanel>
        </Grid>
    </DockPanel>
</UserControl>
